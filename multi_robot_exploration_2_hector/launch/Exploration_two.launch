<launch>
  <arg name="first_tb3"  default="tb3_0"/>
  <arg name="second_tb3" default="tb3_1"/>



 
  <node pkg="costmap_2d" type="costmap_2d_node" name="costmap_for_exploration_global" respawn="true" >
    
    <rosparam ns="costmap" subst_value="true">
      global_frame: tb3_0/map
      robot_base_frame: tb3_0/base_footprint
      update_frequency: 10.0
      publish_frequency: 10.0
      rolling_window: false
      always_send_full_costmap: true
      # Map management parameters
      unknown_cost_value: 255
      
      robot_radius: 0.3
      plugins: 
        - {name: static, type: "costmap_2d::StaticLayer"}
        - {name: inflation,        type: "costmap_2d::InflationLayer"}  
      static:
        #Can pull data from gmapping, map_server or a non-rolling costmap            
        map_topic: tb3_0/map
        subscribe_to_updates: true 
      inflation:
        inflation_radius: 0.1

    </rosparam>
  </node>

  <group ns = "$(arg first_tb3)">


   <node pkg="frontier_allocation" type="frontier_detection" name="frontier_detection" output="screen">
      <param name="map" value="/costmap_for_exploration_global/costmap/costmap"/>
      <param name="min_frontier_size_px" value="10"/>
      <param name="base_frame" value="/tb3_0/base_footprint"/>
      <param name="frontiers_topic" value="/tb3_0/frontiers"/>




    </node>
  
      <node pkg="frontier_allocation" type="frontier_allocation" name="frontier_allocation" output="screen">
      <param name="goal_tolerance" value="1"/>
      <param name="frontier_tolerance" value="0.05"/>
      <param name="random_frontier" value="false"/>
      <param name="cmd_vel_topic" value="/tb3_0/cmd_vel"/>
      <param name="map_frame" value="tb3_0/map"/>
      <param name="base_frame" value="/tb3_0/base_footprint"/>
      <param name="goal_topic" value="/tb3_0/move_base/current_goal"/>
      <param name="frontier_topic" value="/tb3_0/frontiers"/>
      <param name="planner_service" value="/tb3_0/move_base/NavfnROS/make_plan"/>
    </node>

  </group> 
  
</launch>
